namespace Core.Tests
{
    public class Tests
    {
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void DNSMessage_QueryPayload1()
        {
            var payload = Convert.FromHexString
            var message = new DNSMessage(payload);

            Assert.That(message.IsQuery, Is.True);
            Assert.That(message.Queries.Count, Is.EqualTo(3));
            Assert.That(message.Queries[0].Name, Is.EqualTo("_airplay-bds._tcp.local"));
            Assert.That(message.Queries[1].Name, Is.EqualTo("_airplay._tcp.local"));
            Assert.That(message.Queries[2].Name, Is.EqualTo("_raop._tcp.local"));
        }

        [Test]
        public void DNSMessage_ResponsePayload1()
        {
            var payload = Convert.FromHexString

            var message = new DNSMessage(payload);
            Assert.That(message.IsQuery, Is.False);
        }
    }
}